import React, { useState } from "react";
import { MapPin, Home, Save, X } from "lucide-react";
import { toast } from "react-toastify";

const ColdRoomAssignmentModal = ({ isOpen, onClose, deceasedData, onUpdate }) => {
Â  const [assignmentData, setAssignmentData] = useState({
Â  Â  // Correctly initializes with existing data or an empty string
Â  Â  coldRoomNo: deceasedData?.cold_room_no || "",
Â  Â  trayNo: deceasedData?.tray_no || "",
Â  });

Â  const [loading, setLoading] = useState(false);

Â  const handleInputChange = (e) => {
Â  Â  const { name, value } = e.target;
Â  Â  setAssignmentData((prev) => ({
Â  Â  Â  ...prev,
Â  Â  Â  [name]: value,
Â  Â  }));
Â  };

Â  const handleSubmit = async (e) => {
Â  Â  e.preventDefault();
Â  Â  setLoading(true);

Â  Â  // ðŸ›‘ FIX: Input Validation Check
Â  Â  if (!assignmentData.coldRoomNo.trim() || !assignmentData.trayNo.trim()) {
Â  Â  Â  toast.error("Both Cold Room Number and Tray Number are required for assignment.");
Â  Â  Â  setLoading(false);
Â  Â  Â  return;
Â  Â  }

Â  Â  try {
Â  Â  Â  // Assuming deceasedData.id is available as confirmed by original code
Â  Â  Â  const response = await fetch(
Â  Â  Â  Â  `http://localhost:5000/api/v1/restpoint/assign-cold-room/${deceasedData.id}`,
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  method: "POST",
Â  Â  Â  Â  Â  headers: {
Â  Â  Â  Â  Â  Â  "Content-Type": "application/json",
Â  Â  Â  Â  Â  },
Â  Â  Â  Â  Â  body: JSON.stringify(assignmentData),
Â  Â  Â  Â  }
Â  Â  Â  );

Â  Â  Â  const result = await response.json();

Â  Â  Â  if (response.ok) {
Â  Â  Â  Â  toast.success("Cold room assignment updated successfully");
Â  Â  Â  Â  onClose();
Â  Â  Â  Â  if (onUpdate) onUpdate();
Â  Â  Â  } else {
Â  Â  Â  Â  throw new Error(result.message || "Failed to update cold room assignment");
Â  Â  Â  }
Â  Â  } catch (error) {
Â  Â  Â  toast.error(error.message);
Â  Â  } finally {
Â  Â  Â  setLoading(false);
Â  Â  }
Â  };

Â  if (!isOpen) return null;
Â  
Â  // Determine if this is a new assignment or an update/correction
Â  const isAssigned = deceasedData.cold_room_no || deceasedData.tray_no;
Â  const submitButtonText = isAssigned ? "Update Assignment" : "Assign Cold Room";

Â  return (
Â  Â  <div style={styles.modalOverlay} onClick={onClose}>
Â  Â  Â  <div style={styles.modalContent} onClick={(e) => e.stopPropagation()}>
Â  Â  Â  Â  {/* Header */}
Â  Â  Â  Â  <div style={styles.modalHeader}>
Â  Â  Â  Â  Â  <div style={styles.modalTitle}>
Â  Â  Â  Â  Â  Â  <Home size={22} style={{ marginRight: "8px" }} />
Â  Â  Â  Â  Â  Â  {isAssigned ? "Update Room Assignment" : "Cold Room Assignment"}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <button style={styles.closeButton} onClick={onClose}>
Â  Â  Â  Â  Â  Â  <X size={18} />
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>
Â  Â  Â  Â  
Â  Â  Â  Â  {/* Info paragraph adjusted based on assignment status */}
Â  Â  Â  Â  <p style={styles.promptText}>
Â  Â  Â  Â  Â  {isAssigned 
Â  Â  Â  Â  Â  Â  ? `Update the Cold Room and Tray details for ${deceasedData?.full_name || 'this record'}.`
Â  Â  Â  Â  Â  Â  : `Assign Cold Room and Tray details for ${deceasedData?.full_name || 'this record'}.`}
Â  Â  Â  Â  </p>

Â  Â  Â  Â  {/* Current Assignment Info (Conditional) */}
Â  Â  Â  Â  {isAssigned && (
Â  Â  Â  Â  Â  <div style={styles.infoBox}>
Â  Â  Â  Â  Â  Â  <h4 style={styles.infoHeader}>Currently Assigned</h4>
Â  Â  Â  Â  Â  Â  <p style={styles.infoText}>
Â  Â  Â  Â  Â  Â  Â  {deceasedData.cold_room_no && 
Â  Â  Â  Â  Â  Â  Â  Â  <><Home size={14} style={{ marginRight: "4px" }} /> <strong>Room:</strong> {deceasedData.cold_room_no} </>
Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  {deceasedData.tray_no && 
Â  Â  Â  Â  Â  Â  Â  Â  <><MapPin size={14} style={{ marginLeft: "12px", marginRight: "4px" }} /> <strong>Tray:</strong> {deceasedData.tray_no}</>
Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}
Â  Â  Â  Â  
Â  Â  Â  Â  {/* Form */}
Â  Â  Â  Â  <form onSubmit={handleSubmit}>
Â  Â  Â  Â  Â  <div style={{...styles.formGroup, marginTop: isAssigned ? '1.5rem' : '1rem'}}>
Â  Â  Â  Â  Â  Â  <label style={styles.label}>
Â  Â  Â  Â  Â  Â  Â  <Home size={16} style={{ marginRight: "6px" }} />
Â  Â  Â  Â  Â  Â  Â  Cold Room Number <span style={{color: 'red', marginLeft: '4px'}}>*</span>
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  name="coldRoomNo"
Â  Â  Â  Â  Â  Â  Â  value={assignmentData.coldRoomNo}
Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  placeholder="e.g., CR-01"
Â  Â  Â  Â  Â  Â  Â  style={styles.input}
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  <div style={styles.formGroup}>
Â  Â  Â  Â  Â  Â  <label style={styles.label}>
Â  Â  Â  Â  Â  Â  Â  <MapPin size={16} style={{ marginRight: "6px" }} />
Â  Â  Â  Â  Â  Â  Â  Tray Number <span style={{color: 'red', marginLeft: '4px'}}>*</span>
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  name="trayNo"
Â  Â  Â  Â  Â  Â  Â  value={assignmentData.trayNo}
Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  placeholder="e.g., T-05"
Â  Â  Â  Â  Â  Â  Â  style={styles.input}
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  ...styles.submitButton,
Â  Â  Â  Â  Â  Â  Â  backgroundColor: loading ? "#94a3b8" : "#0284c7",
Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {loading ? "Saving..." : submitButtonText}
Â  Â  Â  Â  Â  Â  {!loading && <Save size={16} style={{ marginLeft: "6px" }} />}
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </form>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

/* ------------------------- STYLES ------------------------- */
const styles = {
Â  // ... (Keep existing styles for modalOverlay, modalContent, etc.)
Â  modalOverlay: {
Â  Â  position: "fixed",
Â  Â  inset: 0,
Â  Â  backgroundColor: "rgba(0,0,0,0.5)",
Â  Â  display: "flex",
Â  Â  justifyContent: "center",
Â  Â  alignItems: "center",
Â  Â  zIndex: 1000,
Â  Â  padding: "1rem",
Â  },
Â  modalContent: {
Â  Â  backgroundColor: "#fff",
Â  Â  borderRadius: "12px",
Â  Â  width: "100%",
Â  Â  maxWidth: "450px",
Â  Â  padding: "1.5rem",
Â  Â  boxShadow: "0 4px 10px rgba(0,0,0,0.15)",
Â  Â  animation: "fadeIn 0.3s ease-in-out",
Â  },
Â  modalHeader: {
Â  Â  display: "flex",
Â  Â  justifyContent: "space-between",
Â  Â  alignItems: "center",
Â  Â  marginBottom: "1rem",
Â  Â  borderBottom: "1px solid #e5e7eb",
Â  Â  paddingBottom: "0.5rem",
Â  },
Â  modalTitle: {
Â  Â  fontSize: "1.2rem",
Â  Â  fontWeight: "600",
Â  Â  display: "flex",
Â  Â  alignItems: "center",
Â  Â  color: "#0f172a",
Â  },
Â  closeButton: {
Â  Â  background: "none",
Â  Â  border: "none",
Â  Â  cursor: "pointer",
Â  Â  color: "#475569",
Â  },
Â  formGroup: {
Â  Â  marginBottom: "1rem",
Â  },
Â  label: {
Â  Â  display: "flex",
Â  Â  alignItems: "center",
Â  Â  fontWeight: "500",
Â  Â  marginBottom: "0.4rem",
Â  Â  color: "#334155",
Â  },
Â  input: {
Â  Â  width: "100%",
Â  Â  padding: "0.6rem 0.8rem",
Â  Â  border: "1px solid #cbd5e1",
Â  Â  borderRadius: "6px",
Â  Â  outline: "none",
Â  Â  fontSize: "0.95rem",
Â  },
Â  submitButton: {
Â  Â  display: "flex",
Â  Â  alignItems: "center",
Â  Â  justifyContent: "center",
Â  Â  width: "100%",
Â  Â  padding: "0.75rem",
Â  Â  color: "#fff",
Â  Â  fontWeight: "600",
Â  Â  border: "none",
Â  Â  borderRadius: "8px",
Â  Â  cursor: "pointer",
Â  Â  marginTop: "0.5rem",
Â  Â  transition: "background-color 0.2s ease",
Â  },
Â  infoBox: {
Â  Â  display: 'flex',
Â  Â  alignItems: 'center',
Â  Â  justifyContent: 'flex-start',
Â  Â  padding: "0.75rem 1rem", // Reduced padding
Â  Â  backgroundColor: "#f0f9ff",
Â  Â  borderRadius: "0.5rem",
Â  Â  border: "1px solid #bae6fd",
Â  Â  marginBottom: "0.5rem", // Added small bottom margin
Â  },
Â  infoHeader: {
Â  Â  margin: "0", // Removed margin
Â  Â  color: "#0369a1",
Â  Â  fontWeight: "600",
Â  Â  fontSize: "1rem",
Â  Â  marginRight: "1rem", // Added space
Â  Â  whiteSpace: 'nowrap'
Â  },
Â  infoText: {
Â  Â  margin: 0,
Â  Â  fontSize: "0.9rem",
Â  Â  color: "#1e293b",
Â  Â  display: 'flex',
Â  Â  alignItems: 'center',
Â  },
Â  promptText: {
Â  Â  margin: "0 0 1rem 0",
Â  Â  fontSize: "0.9rem",
Â  Â  color: "#475569",
Â  }
};

export default ColdRoomAssignmentModal;